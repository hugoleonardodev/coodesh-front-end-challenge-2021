{
    "root": true,
    "env": {
        "commonjs": true,
        "es6": true,
        "browser": true
    },
    "extends": [
        "eslint:recommended",
        "plugin:react/recommended",
        "plugin:react-perf/recommended",
        "plugin:react-hooks/recommended",
        "plugin:unicorn/recommended",
        "plugin:prettier/recommended",
        "plugin:testing-library/react",
        "plugin:jest-dom/recommended"
    ],
    "parser": "@babel/eslint-parser",
    "parserOptions": {
        "ecmaFeatures": {
            "jsx": true
        },
        "ecmaVersion": 2020,
        "sourceType": "module",
        "project": "./tsconfig.json"
    },
    "plugins": ["import", "react-hooks", "prettier", "testing-library", "import-helpers"],
    "globals": {
        "__IS_DEVELOPMENT__": "readonly",
        "__IS_PRODUCTION__": "readonly",
        "__API_URL__": "readonly",
        "__APP_NAME__": "readonly"
    },
    "overrides": [
        {
            "files": ["**/*.ts", "**/*.tsx"],
            "parser": "@typescript-eslint/parser",
            "extends": ["plugin:@typescript-eslint/eslint-recommended", "plugin:@typescript-eslint/recommended"],
            "plugins": ["@typescript-eslint"],
            "rules": {
                "@typescript-eslint/explicit-module-boundary-types": ["error"]
            }
        },
        {
            "files": ["webpack.*.js", "babel*", "postcss*", "tailwind.config.js", "handlers.ts", "browser.ts"],
            "env": {
                "node": true
            },
            "rules": {
                "unicorn/prefer-module": 0,
                "no-console": 0,
                "complexity": ["error", 10],
                "@typescript-eslint/no-var-requires": 0
            }
        },
        {
            "files": ["**/src/**/*.[jt]s?(x)", "**/?(*.)+(spec|test).[jt]s?(x)"],
            "env": {
                "node": true
            },
            "extends": ["plugin:testing-library/react"]
        }
    ],
    "settings": {
        "react": {
            "version": "detect"
        }
    },
    "rules": {
        "arrow-body-style": "off",
        "complexity": ["error", 10],
        "function-call-argument-newline": ["error", "consistent"],
        "prefer-arrow-callback": "off",
        "no-extra-semi": "off",
        "no-console": ["error"],
        "no-unused-vars": "off",
        "semi": ["error", "never"],
        "react/prop-types": 0,
        "import-helpers/order-imports": [
            "warn",
            {
                "newlinesBetween": "always", // new line between groups
                "groups": [
                    "module",
                    "/^@server/shared/",
                    "/^@/",
                    ["parent", "sibling", "index"]
                ],
                "alphabetize": { "order": "asc", "ignoreCase": true }
            }
        ],
        "unicorn/consistent-function-scoping": 0,
        "unicorn/filename-case": 0,
        "unicorn/no-nested-ternary": 0,
        "unicorn/prefer-spread": 0,
        "unicorn/no-null": 0,
        "unicorn/numeric-separators-style": 0,
        "@typescript-eslint/no-extra-semi": ["error"],
        "@typescript-eslint/no-unused-vars": ["error"],
        "@typescript-eslint/no-magic-numbers": [
            "error",
            {
                "ignoreArrayIndexes": true,
                "ignoreDefaultValues": true,
                "ignore": [-1, 0, 1]
            }
        ],
        "@typescript-eslint/naming-convention": [
            "error",
            {
                "selector": "interface",
                "format": ["PascalCase"],
                "custom": {
                    "regex": "^I[A-Z]",
                    "match": true
                }
            },
            {
                "selector": "typeAlias",
                "format": ["PascalCase"],
                "custom": {
                    "regex": "^T[A-Z]",
                    "match": true
                }
            },
            {
                "selector": "variableLike",
                "format": ["camelCase", "UPPER_CASE", "PascalCase", "snake_case"],
                "leadingUnderscore": "allowSingleOrDouble",
                "trailingUnderscore": "allowSingleOrDouble"
            },
            {
                "selector": "variable",
                "format": ["camelCase", "UPPER_CASE"],
                "types": ["boolean"],
                "prefix": ["is", "IS_", "should", "SHOULD_", "has", "HAS_", "can", "CAN_", "did", "DID_", "will", "WILL_"],
                "leadingUnderscore": "allowSingleOrDouble",
                "trailingUnderscore": "allowSingleOrDouble"
            },
            {
                "selector": "parameter",
                "format": ["camelCase"],
                "leadingUnderscore": "allow"
            },
            {
                "selector": "enumMember",
                "format": ["UPPER_CASE"]
            }
        ]
    }
}
